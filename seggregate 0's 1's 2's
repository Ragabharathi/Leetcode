input:
2 1 0 2 0 1

output:
0 0 0 1 1 2 2

#include<stdio.h>
#include<stdlib.h>
struct Node{
    int data;
    struct Node *next;
};
void insertAtBegining(struct Node **head,int data){
    struct Node *newNode=(struct Node*)malloc(sizeof(struct Node));
    newNode->data=data;
    newNode->next=NULL;
    if(*head==NULL){
    *head=newNode;
    }
    else{
    newNode->next=*head;
    *head=newNode;
    }
}
void sortOrder(struct Node **head){
    if (*head==NULL || (*head)->next==NULL){
    return;
    }
    struct Node tzero,tone,ttwo;
    tzero.next=tone.next=ttwo.next=NULL;
     struct Node *zero=&tzero;
     struct Node *one=&tone;
     struct Node *two=&ttwo;
     
     struct Node *curr=*head;
     while(curr!=NULL)
     {
         if(curr->data==0){
             zero->next=curr;
             zero=zero->next;
             
         }else if(curr->data==1){
              one->next=curr;
             one=one->next;
             
         }else{
              two->next=curr;
              two=two->next;
             
         }
         curr=curr->next;
     }
    zero->next=(tone.next)?(tone.next):(ttwo.next);
    one->next=two;
    two->next=NULL;
    *head=tzero.next;
}
void display(struct Node *head){
    while(head!=NULL)
    {
        printf("%d->",head->data);
        head=head->next;
    }
    printf("NULL");
}
int main(){
    printf("Enter the number of nodes:\n");
    int n;
    scanf("%d",&n);
    int data;
    struct Node *head=NULL;
    for(int i=0;i<n;i++)
    {
        scanf("%d",&data);
        if(data<=2)
        {
            insertAtBegining(&head,data);
        }
        else{
            printf("Invalid Input");
        }
    }
    sortOrder(&head);
    display(head);
    
    
}
